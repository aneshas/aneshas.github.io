<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>microservices on Anes Hasicic</title><link>https://anes.io/tags/microservices/</link><description>Recent content in microservices on Anes Hasicic</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 05 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://anes.io/tags/microservices/index.xml" rel="self" type="application/rss+xml"/><item><title>Modeling Domain Events</title><link>https://anes.io/posts/modeling-domain-events/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><guid>https://anes.io/posts/modeling-domain-events/</guid><description>Domain Event is a powerful modeling tool. From a technical perspective domain event is implemented as a simple immutable data transfer object, but conceptually, domain event is much, much more than that.
Naming Domain Events There are only two hard things in Computer Science: cache invalidation and naming things. â€” Phil Karlton
Naming domain events is no different, but if we understand the nature of a domain event, combined with a few useful guidelines, it is more than manageable.</description></item><item><title>Missing the point with Microservices</title><link>https://anes.io/posts/missing-the-point-with-microservices/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://anes.io/posts/missing-the-point-with-microservices/</guid><description>By now, even the birds on the trees got the memo that microservices are not a catch-all magic pill that will fix all of your organizational and product issues seemingly caused by a monolithic way of thinking.
More often than not organizations fail spectacularly by carrying over this monolithic way of thinking when decomposing their systems towards more decoupled (hopefully) microservices architecture and end up having even more issues and higher incurred costs as compared to the good old monolith.</description></item></channel></rss>